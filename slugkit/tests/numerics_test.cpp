#include <slugkit/utils/numeric.hpp>

#include <userver/utest/utest.hpp>

#include <iostream>

namespace numeric {

UTEST(Numerics, GCD) {
    EXPECT_EQ(gcd(1, 1), 1);
    EXPECT_EQ(gcd(1, 2), 1);
    EXPECT_EQ(gcd(2, 2), 2);
    EXPECT_EQ(gcd(2, 3), 1);
    EXPECT_EQ(gcd(3, 3), 3);
    EXPECT_EQ(gcd(3, 4), 1);
    EXPECT_EQ(gcd(4, 4), 4);

    EXPECT_EQ(gcd(100000, 100000), 100000);
    EXPECT_EQ(gcd(100000, 200000), 100000);
    EXPECT_EQ(gcd(150000, 225000), 75000);
    EXPECT_EQ(gcd(160000, 240000), 80000);
    EXPECT_EQ(gcd(180000, 300000), 60000);
    EXPECT_EQ(gcd(200000, 300000), 100000);
    EXPECT_EQ(gcd(250000, 500000), 250000);
    EXPECT_EQ(gcd(300000, 450000), 150000);
    EXPECT_EQ(gcd(350000, 700000), 350000);
    EXPECT_EQ(gcd(400000, 600000), 200000);
    EXPECT_EQ(gcd(450000, 750000), 150000);
    EXPECT_EQ(gcd(500000, 750000), 250000);
    EXPECT_EQ(gcd(550000, 825000), 275000);
    EXPECT_EQ(gcd(600000, 900000), 300000);
    EXPECT_EQ(gcd(650000, 975000), 325000);
    EXPECT_EQ(gcd(700000, 840000), 140000);
    EXPECT_EQ(gcd(750000, 900000), 150000);
    EXPECT_EQ(gcd(800000, 960000), 160000);
    EXPECT_EQ(gcd(850000, 935000), 85000);
    EXPECT_EQ(gcd(900000, 990000), 90000);
}

UTEST(Numerics, LCM) {
    EXPECT_EQ(lcm(1, 1), 1);
    EXPECT_EQ(lcm(1, 2), 2);
    EXPECT_EQ(lcm(2, 2), 2);
    EXPECT_EQ(lcm(2, 3), 6);
    EXPECT_EQ(lcm(3, 3), 3);
    EXPECT_EQ(lcm(3, 4), 12);
    EXPECT_EQ(lcm(4, 4), 4);

    EXPECT_EQ(lcm(100000, 100000), 100000);
    EXPECT_EQ(lcm(100000, 200000), 200000);
    EXPECT_EQ(lcm(150000, 225000), 450000);
    EXPECT_EQ(lcm(160000, 240000), 480000);
    EXPECT_EQ(lcm(180000, 300000), 900000);
    EXPECT_EQ(lcm(200000, 300000), 600000);

    // Co-prime numbers (numbers where gcd = 1)
    EXPECT_EQ(lcm(7, 13), 91);
    EXPECT_EQ(lcm(17, 23), 391);
    EXPECT_EQ(lcm(31, 37), 1147);
    EXPECT_EQ(lcm(41, 43), 1763);
    EXPECT_EQ(lcm(53, 59), 3127);
    EXPECT_EQ(lcm(61, 67), 4087);
    EXPECT_EQ(lcm(71, 73), 5183);
    EXPECT_EQ(lcm(79, 83), 6557);
    EXPECT_EQ(lcm(89, 97), 8633);
    EXPECT_EQ(lcm(101, 103), 10403);
}

UTEST(Numerics, ConstructFromString) {
    EXPECT_EQ(BigInt("123"), BigInt("123"));
    EXPECT_EQ(BigInt("12345678901234567890"), BigInt("12345678901234567890"));
    EXPECT_EQ(BigInt("123456789012345678901234567890"), BigInt("123456789012345678901234567890"));
    EXPECT_EQ(BigInt("1234567890123456789012345678901234567890"), BigInt("1234567890123456789012345678901234567890"));
    EXPECT_EQ(
        BigInt("12345678901234567890123456789012345678901234567890"),
        BigInt("12345678901234567890123456789012345678901234567890")
    );
    EXPECT_EQ(
        BigInt("123456789012345678901234567890123456789012345678901234567890"),
        BigInt("123456789012345678901234567890123456789012345678901234567890")
    );
}
}  // namespace numeric
